name: Build and Deploy to Google Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: ${{ secrets.CLOUD_RUN_SERVICE_NAME }}
  GCR_HOSTNAME: gcr.io
  GCR_REGISTRY: us-west3-docker.pkg.dev
  GCR_IMAGE: gdgcloudlahore-419421
  GCR_REGION: us-west3

jobs:
  setup-build-publish-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Necessary to fetch all tags and history
      
      - name: Determine new version
        id: versioning
        run: |
          git fetch --tags
          # Check if any tags exist
          if [ $(git tag | wc -l) -eq 0 ]; then
            echo "No tags found. Please create an initial tag."
            exit 1  # Exit with error if no tags are found
          else
            LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          fi
          echo "Latest tag is $LATEST_TAG"
          # Prepare the next tag without the 'v' prefix
          NEXT_TAG=$(echo $LATEST_TAG | sed 's/v//g' | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo "Attempting new tag $NEXT_TAG"
          # Check if the NEXT_TAG already exists
          if git rev-parse "v$NEXT_TAG" >/dev/null 2>&1; then
            echo "New tag v$NEXT_TAG already exists. Using the latest tag $LATEST_TAG instead."
            # If NEXT_TAG exists, we stick with LATEST_TAG and do not create a new one.
            echo "NEW_TAG=$LATEST_TAG" >> $GITHUB_ENV
          else
            echo "New tag is $NEXT_TAG"
            # Add 'v' prefix when creating the tag in git
            git tag "v$NEXT_TAG"
            git push origin "v$NEXT_TAG"
            # Use the successfully created new tag without the 'v' prefix in the workflow.
            echo "NEW_TAG=$NEXT_TAG" >> $GITHUB_ENV
          fi


      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          version: 'latest'
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Login to GCR
        uses: docker/login-action@v3
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY}}

      - name: Setup Project 
        run: |
          gcloud auth configure-docker ${GCR_REGISTRY}

      - name: Build  image Build and Tag
        run: |
          DOCKER_BUILDKIT=0
          docker build -t ${GCR_REGISTRY}/${{ secrets.GCP_PROJECT_ID }}/${GCR_IMAGE}/helloworld:${{ steps.versioning.outputs.new_tag }} .

               
      - name: Docker Push to Google Registry
        run: |
          docker push ${GCR_REGISTRY}/${{ secrets.GCP_PROJECT_ID }}/${GCR_IMAGE}/helloworld:${{steps.versioning.outputs.new_tag }}

      - name: Deploying Cloud Run with Latest image
        run: |
          gcloud run deploy helloworld \
          --region ${GCR_REGION} \
          --image ${GCR_REGISTRY}/${{ secrets.GCP_PROJECT_ID }}/${GCR_IMAGE}/helloworld:${{ steps.versioning.outputs.new_tag }} \
          --platform managed \
          --allow-unauthenticated \
          --project ${{ secrets.GCP_PROJECT_ID }}
